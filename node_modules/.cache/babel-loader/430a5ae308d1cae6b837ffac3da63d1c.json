{"ast":null,"code":"var _jsxFileName = \"/Users/learnacademy/Desktop/treasure-hunt/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport ResetGame from \"./components/ResetGame.js\";\nimport Square from \"./components/Square.js\";\nimport User from \"./components/User.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  //state hook for board\n  const [board, setBoard] = useState([\"?\", \"?\", \"?\", \"?\", \"?\", \"?\", \"?\", \"?\", \"?\"]); // state hook for setting random treasure\n\n  const [treasureLocation, setTreasureLocation] = useState(Math.floor(Math.random() * board.length - 1)); // sstate hook for setting bomb location\n\n  const [bombLocation, setBombLocation] = useState(Math.floor(Math.random() * board.length - 1));\n  const [gameStatus, setGameStatus] = useState(\"Still Alive\"); // state hook for current user\n\n  const [user, setUser] = useState(\"\");\n\n  const currentUser = e => {\n    setUser(e.target.value);\n    console.log(setUser);\n  };\n\n  const handleGamePlay = index => {\n    let updatedBoard = [...board];\n\n    if (index === bombLocation) {\n      updatedBoard[index] = \"ðŸ’£\";\n      setGameStatus(\"You are dead\");\n      setBoard(updatedBoard);\n    } else if (index === treasureLocation) {\n      updatedBoard[index] = \"ðŸ’Ž\";\n      setBoard(updatedBoard);\n    } else {\n      updatedBoard[index] = \"ðŸŒ´\";\n      setBoard(updatedBoard);\n    }\n  };\n\n  const resetState = () => {\n    setBoard(board.map(value => \"?\"));\n    setTreasureLocation(Math.floor(Math.random() * board.length));\n    setBombLocation(Math.floor(Math.random() * board.length));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Treasure Hunt Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: currentUser,\n        value: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(User, {\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), \"gameStatus\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameboard\",\n      children: [board.map((value, index) => {\n        return /*#__PURE__*/_jsxDEV(Square, {\n          Key: index,\n          value: value,\n          index: index,\n          handleGamePlay: handleGamePlay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(ResetGame, {\n        reset: resetState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scoreboard\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"scoreboard:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"FztNWIsT/TOSIhEHZodZ1FhTavI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ResetGame","Square","User","App","board","setBoard","treasureLocation","setTreasureLocation","Math","floor","random","length","bombLocation","setBombLocation","gameStatus","setGameStatus","user","setUser","currentUser","e","target","value","console","log","handleGamePlay","index","updatedBoard","resetState","map"],"sources":["/Users/learnacademy/Desktop/treasure-hunt/src/App.js"],"sourcesContent":["import React, { useState } from \"react\"\nimport \"./App.css\"\nimport ResetGame from \"./components/ResetGame.js\"\nimport Square from \"./components/Square.js\"\nimport User from \"./components/User.js\"\n\nconst App = () => {\n  //state hook for board\n  const [board, setBoard] = useState([\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\"\n  ])\n\n // state hook for setting random treasure\n  const [treasureLocation, setTreasureLocation] = useState(Math.floor(Math.random()* board.length-1))\n// sstate hook for setting bomb location\n  const [bombLocation, setBombLocation] = useState(Math.floor(Math.random()* board.length-1))\n  const [gameStatus, setGameStatus] = useState(\"Still Alive\")\n\n// state hook for current user\nconst [user, setUser] = useState(\"\")\n\nconst currentUser = (e) => {\n  setUser(e.target.value)\n  console.log(setUser)\n}\n  \n  const  handleGamePlay = (index) => {\n    let updatedBoard = [...board]\n    if(index === bombLocation){\n      updatedBoard[index] = \"ðŸ’£\"\n      setGameStatus(\"You are dead\")\n    setBoard(updatedBoard)\n    }else if(index === treasureLocation){\n      updatedBoard[index] = \"ðŸ’Ž\"\n    setBoard(updatedBoard)\n    }else {\n    updatedBoard[index] = \"ðŸŒ´\"\n    setBoard(updatedBoard)\n    }\n  }\n\n  const resetState = () => {\n    setBoard(board.map((value => \"?\")))\n    setTreasureLocation(Math.floor(Math.random()* board.length))\n    setBombLocation(Math.floor(Math.random()* board.length))  \n  }\n\n  return (\n    <>\n      <h1>Treasure Hunt Game</h1>\n      <div className=\"input\">\n      <input\n      type=\"text\"\n      onChange={currentUser}\n      value={user}\n      />\n      <User user={user}/>\n      </div>\n      <h3></h3>gameStatus\n      <div className=\"gameboard\">\n        {board.map((value, index) => {\n          return(\n            <Square\n            Key={index}\n            value={value}\n            index={index}\n            handleGamePlay=\n            {handleGamePlay}\n            /> \n          ) \n        })}\n        <ResetGame\n        reset={resetState}\n        />\n        \n      </div>\n      <div className=\"scoreboard\">\n        <h3>scoreboard:</h3>\n      </div>\n      \n     \n    </>\n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}