{"ast":null,"code":"var _jsxFileName = \"/Users/learnacademy/Desktop/treasure-hunt-joeyalexander127/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport Square from \"./components/Square.js\"; //import { createStore } from 'redux';\n// const store = createStore(reducer, initialState);\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  //state hook for board\n  const [board, setBoard] = useState([\"?\", \"?\", \"?\", \"?\", \"?\", \"?\", \"?\", \"?\", \"?\"]);\n  const initialBoard = board; // state hook for setting random treasure\n\n  const [treasureLocation, setTreasureLocation] = useState(Math.floor(Math.random() * board.length)); // sstate hook for setting bomb location\n\n  const [bombLocation, setBombLocation] = useState(Math.floor(Math.random() * board.length));\n\n  const handleGamePlay = index => {\n    let updatedBoard = [...board];\n\n    if (index === bombLocation) {\n      updatedBoard[index] = \"ðŸ’£\";\n      setBoard(updatedBoard);\n    } else if (index === treasureLocation) {\n      updatedBoard[index] = \"ðŸ’Ž\";\n      setBoard(updatedBoard);\n    } else {\n      updatedBoard[index] = \"ðŸŒ´\";\n      setBoard(updatedBoard);\n    }\n  };\n\n  const resetState = () => {\n    setBoard(initialBoard);\n    setTreasureLocation(Math.floor(Math.random() * board.length));\n    setBombLocation(Math.floor(Math.random() * board.length));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Treasure Hunt Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameboard\",\n      children: [board.map((value, index) => {\n        return /*#__PURE__*/_jsxDEV(Square, {\n          Key: index,\n          value: value,\n          index: index,\n          handleGamePlay: handleGamePlay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetState,\n        children: \"Reset Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"66xdX1V82zjFbiO8dR7tLDCD1OY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Square","App","board","setBoard","initialBoard","treasureLocation","setTreasureLocation","Math","floor","random","length","bombLocation","setBombLocation","handleGamePlay","index","updatedBoard","resetState","map","value"],"sources":["/Users/learnacademy/Desktop/treasure-hunt-joeyalexander127/src/App.js"],"sourcesContent":["import React, { useState } from \"react\"\nimport \"./App.css\"\nimport Square from \"./components/Square.js\"\n//import { createStore } from 'redux';\n// const store = createStore(reducer, initialState);\n\n\nconst App = () => {\n  //state hook for board\n  const [board, setBoard] = useState([\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\"\n  ])\n\n  const initialBoard = board\n\n\n // state hook for setting random treasure\n  const [treasureLocation, setTreasureLocation] = useState(Math.floor(Math.random()* board.length))\n// sstate hook for setting bomb location\n  const [bombLocation, setBombLocation] = useState(Math.floor(Math.random()* board.length))\n  \n  const  handleGamePlay = (index) => {\n    let updatedBoard = [...board]\n    if(index === bombLocation){\n      updatedBoard[index] = \"ðŸ’£\"\n    setBoard(updatedBoard)\n    }else if(index === treasureLocation){\n      updatedBoard[index] = \"ðŸ’Ž\"\n    setBoard(updatedBoard)\n    }else {\n    updatedBoard[index] = \"ðŸŒ´\"\n    setBoard(updatedBoard)\n    }\n  }\n\n  const resetState = () => {\n    setBoard(initialBoard)\n    setTreasureLocation(Math.floor(Math.random()* board.length))\n    setBombLocation(Math.floor(Math.random()* board.length))  \n  }\n\n  return (\n    <>\n      <h1>Treasure Hunt Game</h1>\n      <div className=\"gameboard\">\n        {board.map((value, index) => {\n          return(\n            <Square\n            Key={index}\n            value={value}\n            index={index}\n            handleGamePlay=\n            {handleGamePlay}\n            /> \n          ) \n        })}\n         <button onClick={resetState}>Reset Game</button>\n      </div>\n     \n    </>\n  )\n}\n\nexport default App\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,wBAAnB,C,CACA;AACA;;;;;AAGA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CACjC,GADiC,EAEjC,GAFiC,EAGjC,GAHiC,EAIjC,GAJiC,EAKjC,GALiC,EAMjC,GANiC,EAOjC,GAPiC,EAQjC,GARiC,EASjC,GATiC,CAAD,CAAlC;EAYA,MAAMK,YAAY,GAAGF,KAArB,CAdgB,CAiBjB;;EACC,MAAM,CAACG,gBAAD,EAAmBC,mBAAnB,IAA0CP,QAAQ,CAACQ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAeP,KAAK,CAACQ,MAAhC,CAAD,CAAxD,CAlBgB,CAmBlB;;EACE,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAACQ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAeP,KAAK,CAACQ,MAAhC,CAAD,CAAhD;;EAEA,MAAOG,cAAc,GAAIC,KAAD,IAAW;IACjC,IAAIC,YAAY,GAAG,CAAC,GAAGb,KAAJ,CAAnB;;IACA,IAAGY,KAAK,KAAKH,YAAb,EAA0B;MACxBI,YAAY,CAACD,KAAD,CAAZ,GAAsB,IAAtB;MACFX,QAAQ,CAACY,YAAD,CAAR;IACC,CAHD,MAGM,IAAGD,KAAK,KAAKT,gBAAb,EAA8B;MAClCU,YAAY,CAACD,KAAD,CAAZ,GAAsB,IAAtB;MACFX,QAAQ,CAACY,YAAD,CAAR;IACC,CAHK,MAGA;MACNA,YAAY,CAACD,KAAD,CAAZ,GAAsB,IAAtB;MACAX,QAAQ,CAACY,YAAD,CAAR;IACC;EACF,CAZD;;EAcA,MAAMC,UAAU,GAAG,MAAM;IACvBb,QAAQ,CAACC,YAAD,CAAR;IACAE,mBAAmB,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAeP,KAAK,CAACQ,MAAhC,CAAD,CAAnB;IACAE,eAAe,CAACL,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAeP,KAAK,CAACQ,MAAhC,CAAD,CAAf;EACD,CAJD;;EAMA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,WAAf;MAAA,WACGR,KAAK,CAACe,GAAN,CAAU,CAACC,KAAD,EAAQJ,KAAR,KAAkB;QAC3B,oBACE,QAAC,MAAD;UACA,GAAG,EAAEA,KADL;UAEA,KAAK,EAAEI,KAFP;UAGA,KAAK,EAAEJ,KAHP;UAIA,cAAc,EACbD;QALD;UAAA;UAAA;UAAA;QAAA,QADF;MASD,CAVA,CADH,eAYG;QAAQ,OAAO,EAAEG,UAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAZH;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAoBD,CA9DD;;GAAMf,G;;KAAAA,G;AAgEN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}